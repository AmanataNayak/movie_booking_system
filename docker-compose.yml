services:
  postgres:
    image: postgres:15-alpine
    container_name: movie-db-postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: movie_booking
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: movie-cache-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  vault:
    image: hashicorp/vault:latest
    container_name: movie-secrets-vault
    ports:
      - "8200:8200"
    volumes:
      - vault_data:/vault/file
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "dev-root-token"
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
    cap_add:
      - IPC_LOCK
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    container_name: movie-s3-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      # --- FOR DEVELOPMENT ONLY ---
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    restart: unless-stopped

  mlflow:
    image: ghcr.io/mlflow/mlflow:latest
    container_name: movie-ml-mlflow
    ports:
      - "5000:5000"
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
    command:
      - "mlflow"
      - "server"
      - "--host"
      - "0.0.0.0"
      - "--backend-store-uri"
      - "postgresql://user:password@postgres:5432/mlflow_db" # Points to our Postgres container
      - "--default-artifact-root"
      - "s3://mlflow"
    depends_on:
      - postgres
      - minio
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  vault_data:
  minio_data: